/*
 *  SourceCodeCounter
 *  Copyright (C) 2009 Nick Sydenham <nsydenham@yahoo.co.uk>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package nrs.scc;

import java.nio.charset.Charset;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;

/**
 * Allows the user to select their preferred character set
 * 
 * @author Copyright 2009 Nick Sydenham &lt;nsydenham@yahoo.co.uk&gt;
 */
public class SelectCharacterSetDialog extends JDialog
{
	private final static String defaultCSName = Charset.defaultCharset().name();
	private String selectedCharset;
	private SourceCodeCounterView sccView;
	private ResourceMap resourceMap = Application.getInstance(SourceCodeCounter.class).getContext().getResourceMap(SelectCharacterSetDialog.class);

	private class CharsetListModel extends DefaultListModel
	{
		public CharsetListModel()
		{
			for (String csName : Charset.availableCharsets().keySet())
			{
				addElement(csName);
			}
		}
	}

    /** Creates new form SelectCharacterSetDialog */
    public SelectCharacterSetDialog(SourceCodeCounterView sccView, String selectedCharset)
	{
        super(sccView.getFrame(), true);
        initComponents();

		this.sccView = sccView;
		this.selectedCharset = (selectedCharset == null ? defaultCSName : selectedCharset);

		csList.setSelectedValue(this.selectedCharset, true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        csScroll = new javax.swing.JScrollPane();
        csList = new javax.swing.JList();
        okButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        pdButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(nrs.scc.SourceCodeCounter.class).getContext().getResourceMap(SelectCharacterSetDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        csScroll.setName("csScroll"); // NOI18N

        csList.setModel(new CharsetListModel());
        csList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        csList.setName("csList"); // NOI18N
        csScroll.setViewportView(csList);

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        resetButton.setText(resourceMap.getString("resetButton.text")); // NOI18N
        resetButton.setToolTipText(resourceMap.getString("resetButton.toolTipText")); // NOI18N
        resetButton.setName("resetButton"); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        pdButton.setText(resourceMap.getString("pdButton.text")); // NOI18N
        pdButton.setToolTipText(resourceMap.getString("pdButton.toolTipText")); // NOI18N
        pdButton.setName("pdButton"); // NOI18N
        pdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pdButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(okButton))
                    .addComponent(csScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(csScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resetButton)
                        .addComponent(pdButton))
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
	{//GEN-HEADEREND:event_okButtonActionPerformed
		if (csList.getSelectedValue() == null)
		{
			JOptionPane.showMessageDialog(this, resourceMap.getString("select.cs"), resourceMap.getString("error"), JOptionPane.ERROR_MESSAGE);
			return;
		}

		sccView.setSelectedCharacterSet(csList.getSelectedValue().toString());
		dispose();
	}//GEN-LAST:event_okButtonActionPerformed

	private void resetButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resetButtonActionPerformed
	{//GEN-HEADEREND:event_resetButtonActionPerformed
		csList.setSelectedValue(selectedCharset, true);
	}//GEN-LAST:event_resetButtonActionPerformed

	private void pdButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pdButtonActionPerformed
	{//GEN-HEADEREND:event_pdButtonActionPerformed
		csList.setSelectedValue(Charset.defaultCharset().name(), true);
	}//GEN-LAST:event_pdButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList csList;
    private javax.swing.JScrollPane csScroll;
    private javax.swing.JButton okButton;
    private javax.swing.JButton pdButton;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables

}
